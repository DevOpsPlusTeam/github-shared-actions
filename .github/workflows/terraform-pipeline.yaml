name: "Terraform shared github actions"

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform-feature:
    if: startsWith(github.ref, 'refs/feature-')
    name: "Terraform feature pipeline"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Init
        id: init
        run: terraform init

  terraform-master:
      name: Terraform Plan
      runs-on: ubuntu-latest
      if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/release-')
      needs: [terraform-check]
      steps:
        - name: Download terraform artifacts
          uses: actions/download-artifact@v3
          with:
            name: terraform-artifacts
        - name: Terraform Init
          id: init
          run: terraform init
        - name: Terraform plan

          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          run: terraform plan -no-color -out=terraform.tfplan

  terraform-release:
      name: Terraform Plan
      runs-on: ubuntu-latest
      needs: [terraform-check]
      steps:
        - name: Download terraform artifacts
          uses: actions/download-artifact@v3
          with:
            name: terraform-artifacts
        - name: Terraform Init
          id: init
          run: terraform init
        - name: Terraform plan
          if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/release-')
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          run: terraform plan -no-color -out=terraform.tfplan

  # terraform-apply:
  #     name: "Terraform Apply"
  #     runs-on: ubuntu-latest
  #     environment: "prod"
  #     needs: [terraform-plan]
  #     steps:
  #     - name: Terraform apply
  #       id: apply
  #       if: startsWith(github.ref, 'refs/tags/release-')
  #       run: terraform apply "terraform.tfplan"

